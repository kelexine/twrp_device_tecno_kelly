# Init script for Trustonic recovery

import /init.recovery.trustonic.rc

# Set environment variable for LD_LIBRARY_PATH
on init
    export LD_LIBRARY_PATH /system/lib:/vendor/lib:/vendor/lib/hw:/system/lib/hw

# Support A/B feature for EMMC boot region and fix OF installer
on post-fs
    symlink /dev/block/mmcblk0boot0 /dev/block/platform/bootdevice/by-name/preloader_a
    symlink /dev/block/mmcblk0boot1 /dev/block/platform/bootdevice/by-name/preloader_b
    symlink /dev/block/platform/bootdevice /dev/block/bootdevice

# Support A/B feature for combo emmc OTA update
on post-fs
    symlink /dev/block/platform/bootdevice/by-name/preloader_a /dev/block/platform/bootdevice/by-name/preloader_emmc_a
    symlink /dev/block/platform/bootdevice/by-name/preloader_b /dev/block/platform/bootdevice/by-name/preloader_emmc_b
    symlink /dev/block/platform/bootdevice/by-name/preloader_a /dev/block/by-name/preloader_emmc_a
    symlink /dev/block/platform/bootdevice/by-name/preloader_b /dev/block/by-name/preloader_emmc_b

# Run mtk_plpath_utils and start mtk.plpath.utils.link service
on post-fs
    exec u:r:update_engine:s0 root root -- /system/bin/mtk_plpath_utils
    start mtk.plpath.utils.link

# Install keyring
on fs
    if ! install_keyring; then
        echo "Failed to install keyring"
    fi

# Define services
service mtk.plpath.utils.link /system/bin/mtk_plpath_utils {
    class main
    user root
    group root system
    disabled
    oneshot
    seclabel u:r:recovery:s0
}

service keystore_auth /system/bin/keystore_auth {
    oneshot
    user system
    group root
    disabled
    seclabel u:r:recovery:s0
}

service keystore /system/bin/keystore /tmp/misc/keystore {
    user root
    group root drmrpc readproc log
    disabled
    seclabel u:r:recovery:s0
}

service keymaster-4-0 /system/bin/android.hardware.keymaster@4.0-service.trustonic {
    user root
    group root drmrpc
    disabled
    oneshot
    seclabel u:r:recovery:s0
}

service gatekeeper-1-0 /system/bin/android.hardware.gatekeeper@1.0-service {
    user root
    group root
    disabled
    seclabel u:r:recovery:s0
}

service tee-1-1 /system/bin/vendor.trustonic.tee@1.1-service {
    user root
    group root
    disabled
    seclabel u:r:recovery:s0
}

# Start services based on properties
on property:vendor.sys.listener.registered=true
    start keymaster-4-0
    start gatekeeper-1-0
    start mobicore
    start tee-1-1

on property:hwservicemanager.ready=true
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry ++ (FBE encrypted)"
    start mobicore
    write /proc/bootprof "MOBICORE: create /data/vendor/mcRegistry -- (FBE encrypted)"
    start keymaster-4-0
    start gatekeeper-1-0
    start tee-1-1

on property:ro.crypto.state=unsupported
    stop mobicore
    stop keymaster-4-0
    stop gatekeeper-1-0
    stop tee-1-1

on property:ro.crypto.state=unencrypted
    stop mobicore
    stop keymaster-4-0
    stop gatekeeper-1-0
    stop tee-1-1

on property:twrp.decrypt.done=true
    stop mobicore
    stop keymaster-4-0
    stop gatekeeper-1-0
    stop tee-1-1

# Start boot-hal-1-1 and health-hal-2-1 services on boot
on boot
    start boot-hal-1-1
    start health-hal-2-1

# Create mountpoint for /mnt/vendor/persist partition
on init
    if ! mkdir /mnt/vendor/persist 0771 root root; then
        echo "Failed to create /mnt/vendor/persist directory"
    fi

# Set permissions for /mnt/vendor/persist partition
on post-fs
    if ! chown root root /mnt/vendor/persist && ! chmod 0771 /mnt/vendor/persist; then
        echo "Failed to set permissions for /mnt/vendor/persist directory"
    fi

# Set SEPolicy label for /mnt/vendor/persist partition
on post-fs
    restorecon /mnt/vendor/persist

# Create mcRegistry and paytrigger directories
on post-fs
    if ! mkdir /mnt/vendor/persist/mcRegistry 0771 root root && ! mkdir /mnt/vendor/persist/paytrigger && ! chown root root /mnt/vendor/persist/paytrigger && ! chmod 0777 /
