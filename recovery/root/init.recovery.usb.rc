#!/system/bin/sh

# Copyright (c) 2020, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of The Linux Foundation nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

on early-init {
    write /sys/module/musb_hdrc/parameters/kernel_init_done 1
}

on init {
    setprop sys.usb.configfs 1
    setprop sys.usb.ffs.aio_compat 1
    setprop vendor.usb.controller "musb-hdrc"
    setprop vendor.usb.acm_cnt 0
    setprop vendor.usb.acm_port0 ""
    setprop vendor.usb.acm_port1 ""
    setprop vendor.usb.acm_enable 0
    setprop otg.enabled 0
}

on property:ro.boot.usbcontroller=* {
    setprop sys.usb.controller ${ro.boot.usbcontroller}
}

on fs {
    if [ ! -d /config ]; then
        mkdir /config
    fi

    if [ ! -d /dev/usb-ffs ]; then
        mkdir /dev/usb-ffs 0770 shell shell
    fi

    if [ ! -d /dev/usb-ffs/adb ]; then
        mkdir /dev/usb-ffs/adb 0770 shell shell
    fi

    if [ ! -d /config/usb_gadget ]; then
        mkdir /config/usb_gadget
    fi

    if [ ! -d /config/usb_gadget/g1 ]; then
        mkdir /config/usb_gadget/g1
    fi

    if [ ! -d /config/usb_gadget/g1/strings/0x409 ]; then
        mkdir /config/usb_gadget/g1/strings/0x409
    fi

    if [ ! -d /config/usb_gadget/g1/functions ]; then
        mkdir /config/usb_gadget/g1/functions
    fi

    if [ ! -d /config/usb_gadget/g1/configs ]; then
        mkdir /config/usb_gadget/g1/configs
    fi

    if [ ! -d /config/usb_gadget/g1/configs/b.1 ]; then
        mkdir /config/usb_gadget/g1/configs/b.1
    fi

    if [ ! -d /config/usb_gadget/g1/configs/b.1/strings/0x409 ]; then
        mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409
    fi

    if [ ! -d /config ]; then
        mount configfs none /config
    fi

    if [ ! -d /dev/usb-ffs ]; then
        mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    fi

    write /config/usb_gadget/g1/bcdDevice 0x0223
    write /config/usb_gadget/g1/bcdUSB 0x0200
    write /config/usb_gadget/g1/os_desc/use 1
    write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
    write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
    write /config/usb_gadget/g1/strings/0x409/product ${ro.product.model}

    if [ ! -d /config/usb_gadget/g1/functions/mass_storage.usb0 ]; then
       
